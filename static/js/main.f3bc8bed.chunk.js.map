{"version":3,"sources":["components/SignUp.jsx","components/SignIn.jsx","components/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["SignUp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateField","e","setState","defineProperty","target","name","value","handleSubmit","fetch","method","headers","Headers","Content-Type","body","JSON","stringify","state","then","res","json","flash","open","redirectRef","err","console","log","concat","preventDefault","handleClose","event","reason","email","password","verificationPassword","lastname","react_default","a","createElement","react_router","to","className","Snackbar","onClose","autoHideDuration","ContentProps","aria-describedby","message","id","action","onSubmit","TextField","type","label","onChange","placeholder","Button","color","react_router_dom","Component","SignIn","Profile","profile","Fragment","List","ListItem","ListItemText","primary","secondary","React","theme","createMuiTheme","App","MuiThemeProvider","Grid","container","alignItems","style","height","item","xs","Paper","elevation","margin","justify","sm","textAlign","src","alt","alignContent","exact","from","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3bc8bed.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Link, Redirect } from 'react-router-dom';\n\n\nclass SignUp extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: 'example@example.com',\n      password: 'mypassword',\n      verificationPassword: 'mypassword',\n      name: 'jon',\n      lastname: 'doe',\n      flash: '',\n      open: false,\n      redirectRef: false\n\n    }\n  }\n  \n  updateField = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  // flashColor = () =>{\n  //   this.state.flash === \"User has been signed up!\" ? this.setState({\n  //     backgroundColor: 'green'\n  //   }) : this.setState({\n  //     backgroundColor: 'red'\n  //   }) \n  // }\n  handleSubmit = (e) => {\n    fetch(\"/auth/signup\",\n    {\n      method:  'POST',\n          headers:  new Headers({\n            'Content-Type':  'application/json'\n          }),\n          body:  JSON.stringify(this.state),\n    })\n    .then(res  =>  res.json())\n    .then(\n      res  =>  this.setState({\n        flash:  res.flash,\n        open: true,\n        redirectRef: true\n      }),\n      err  =>  this.setState({\n        flash:  err.flash,\n        open: true,\n        redirectRef: true\n      })\n      )\n      console.log(`information submitted: ${JSON.stringify(this.state)}`);\n      e.preventDefault();\n    }\n\n    handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n          return;\n        }\n\n      this.setState({open: false});\n\n  }\n    \n    render(){\n      const redirectRef = this.state.redirectRef;\n        if(redirectRef===true){\n            return <Redirect to=\"/\" />\n        }\n      return(\n        <div>\n        <div className={this.state.flash === \"User has been signed up!\" ? 'green': 'red'}>\n          <Snackbar\n              open={this.state.open}\n              onClose={this.handleClose}\n              autoHideDuration={6000}\n              // TransitionComponent={this.state.open}\n              ContentProps={{\n                'aria-describedby': 'message-id',\n              }}\n              message={<span id='message-id'>{this.state.flash}</span>}\n            />\n        </div>\n        <h1>Sign Up</h1>\n        <form action=\"POST\" onSubmit={this.handleSubmit}>\n          <TextField \n            type=\"email\" \n            label=\"Email:\"\n            name=\"email\" \n            onChange={this.updateField} \n            placeholder='example@example.com'/>\n          <br/>\n          <TextField \n            type=\"password\" \n            label=\"Password:\"\n            name=\"password\" \n            onChange={this.updateField} \n            placeholder='password'/>\n          <br/>\n          <TextField \n            type=\"password\"\n            label=\"Password Copy:\" \n            name=\"verificationPassword\" \n            onChange={this.updateField} \n            placeholder='password'/>\n          <br/>\n          <TextField \n            type=\"name\" \n            label=\"Firstname:\"\n            name=\"name\" \n            onChange={this.updateField} \n            placeholder='John'/>\n          <br/>\n          <TextField \n            type=\"lastname\" \n            label=\"Lastname:\"\n            name=\"lastname\" \n            onChange={this.updateField} \n            placeholder='Doe'/>\n          <br/>\n          <Button \n            color=\"secondary\" \n            type=\"submit\" \n            value='Submit'>Submit\n          </Button>\n          <br/>\n          <p>Already have an account?</p>\n          <Button color=\"secondary\">\n             <Link className=\"linkButton\" to=\"/signin\">Sign In</Link>\n          </Button>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignUp;","import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { Link, Redirect } from 'react-router-dom'\n\n\n\nclass SignIn extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      email: 'example@example.com',\n      password: 'mypassword',\n      flash: '',\n      open: false,\n      redirectRef: false\n    }\n  }\n  \n  updateField = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    fetch(\"/auth/signin\",\n    {\n      method:  'POST',\n          headers:  new Headers({\n            'Content-Type':  'application/json'\n          }),\n          body:  JSON.stringify(this.state),\n    })\n    .then(res  =>  res.json())\n    .then(\n      res  =>  this.setState({\n        flash:  res.flash,\n        open: true,\n        redirectRef: true\n      }),\n      err  =>  this.setState({\n        flash:  err.flash,\n        open: true,\n        redirectRef: true\n      })\n      )\n      console.log(`information submitted: ${JSON.stringify(this.state)}`);\n      e.preventDefault();\n    }\n\n    handleClose = () => {\n      this.setState({open: false});\n    };\n    \n    render(){\n        const redirectRef = this.state.redirectRef;\n        if(redirectRef===true){\n            return <Redirect to=\"/profile\" />\n        }\n      return(\n        <div>\n        <h1>Sign In</h1>\n        <form action=\"POST\" onSubmit={this.handleSubmit}>\n          <TextField \n            type=\"email\" \n            label=\"Email:\"\n            name=\"email\" \n            onChange={this.updateField} \n            placeholder='example@example.com'/>\n          <br/>\n          <TextField \n            type=\"password\" \n            label=\"Password:\"\n            name=\"password\" \n            onChange={this.updateField} \n            placeholder='password'/>\n          <br/>\n          <Button \n            color=\"secondary\" \n            type=\"submit\" \n            value='Submit'\n            >\n            Sign in\n          </Button>\n          <br/>\n          <p>Dont have an account?</p>\n          <Button\n          color=\"secondary\"\n          >\n             <Link className=\"linkButton\" to=\"/signup\">Sign Up</Link>\n          </Button>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\nclass Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile: {\n        email: 'isabellaafry@gmail.com',\n        name: 'Isabella',\n        lastname: 'Fry',\n      },\n    };\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Your Profile</h1>\n        <List>\n          <ListItem>\n            <ListItemText\n              primary={this.state.profile.email}\n              secondary='Email'\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText\n              primary={this.state.profile.name}\n              secondary='First name'\n            />\n          </ListItem>\n          <ListItem>\n            <ListItemText\n              primary={this.state.profile.lastname}\n              secondary='Last name'\n            />\n          </ListItem>\n        </List>\n        <br/>\n        <Button\n          color='secondary'\n        >\n          <Link className=\"linkButton\" to= '/'>Sign Out</Link>\n        </Button>\n\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Profile;\n","import React from 'react';\nimport './App.css';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Profile from './components/Profile';\nimport {MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\nimport {Grid, Paper} from '@material-ui/core';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\n\n\nconst theme = createMuiTheme();\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme} >\n        <Grid  container\n        alignItems='center'\n        style={{ height:  '100%' }}>\n          <Grid  item xs={12}>\n            <Paper\n            elevation={4}\n            style={{ margin:  32 }}\n            >\n                <Grid  container\n                alignItems='center'\n                justify='center'>\n                  <Grid item xs={12} sm={6} style={{textAlign: 'center'}}>\n                    <img\n                      src='https://images.innoveduc.fr/react_odyssey_homer/wildhomer.png'\n                      alt='Homer Simpson'\n                    />\n                  </Grid>\n                    <Grid  item sm={6} xs={12}\n                    alignContent='center'\n                    >\n                          <BrowserRouter>\n                            <Switch>\n                              <Redirect exact from='/' to='/signin' />\n                              <Route path='/signup' component={SignUp} />\n                              <Route path='/signin' component={SignIn} />\n                              <Route path='/profile' component={Profile} />\n                            </Switch>\n                          </BrowserRouter>\n                    </Grid>\n                </Grid>\n            </Paper>\n          </Grid>\n        </Grid>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}